---
source: example/src/arithmetic.rs
expression: "grammar::Expression::parse(\"a1\")"
---
ParseResult {
    result: Some(
        Number(
            1,
        ),
    ),
    errors: [
        ParseError {
            node_position: Position {
                bytes: 0..1,
                start: Point {
                    line: 1,
                    column: 1,
                },
                end: Point {
                    line: 1,
                    column: 2,
                },
            },
            error_position: Position {
                bytes: 0..1,
                start: Point {
                    line: 1,
                    column: 1,
                },
                end: Point {
                    line: 1,
                    column: 2,
                },
            },
            lookaheads: [
                "Expression_Number_token1",
                "table",
                "let",
                "log",
                "[",
                "print",
                "source_file",
                "Expression_Number",
                "Expression_Sub",
                "Expression_Mul",
                "Expression_Let",
                "Expression_Complex",
                "Expression_Print",
                "Expression_Vec",
                "Expression_Table",
                "Expression",
                "NewTable",
                "LetExpression",
                "ComplexExpression",
                "VecExpression",
                "PrintExpression",
            ],
            reason: Error,
        },
    ],
}
